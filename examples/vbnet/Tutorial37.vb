'----------------------------------------------------------------------------
' Tutorial 37
'
' This tutorial shows how to read an Excel XLS file in VB.NET (the
' XLS file generated by Tutorial 28 as base template), modify
' some data and save it to another XLS file (Tutorial37 - read XLS file.xls).
'----------------------------------------------------------------------------

Imports EasyXLS
Imports System.IO

Module Tutorial37

    Sub Main()


        Console.WriteLine("Tutorial 37" & vbCrLf & "----------" & vbCrLf)

        ' Create an instance of the class that reads Excel files
        Dim workbook As New ExcelDocument

        ' Read XLS file
        Console.WriteLine("Reading file C:\Samples\Tutorial28.xls." & vbCrLf)
        If (workbook.easy_LoadXLSFile("C:\Samples\Tutorial28.xls")) Then

            ' Get the table of data for the second worksheet
            Dim xlsSecondTab As ExcelWorksheet = workbook.easy_getSheet("Second tab")
            Dim xlsSecondTable = xlsSecondTab.easy_getExcelTable

            ' Write some data to the second sheet
            xlsSecondTable.easy_getCell("A1").setValue("Data added by Tutorial37")

            For column As Integer = 0 To 4
                xlsSecondTable.easy_getCell(1, column).setValue("Data " & (column + 1))
            Next

            ' Export the new XLS file
            Console.WriteLine(vbCrLf & "Writing file C:\Samples\Tutorial37 - read XLS file.xls.")
            workbook.easy_WriteXLSFile("C:\Samples\Tutorial37 - read XLS file.xls")

            ' Confirm export of Excel file
            Dim sError As String = workbook.easy_getError()
            If (sError.Equals("")) Then
                Console.Write(vbCrLf & "File successfully created.")
            Else
                Console.Write(vbCrLf & "Error encountered: " & sError)
            End If
        Else
            Console.WriteLine(vbCrLf & "Error reading file C:\Samples\Tutorial28.xls " & vbCrLf & workbook.easy_getError())
        End If

        ' Dispose memory
        workbook.Dispose()

        Console.WriteLine(vbCrLf & "Press Enter to Exit...")
        Console.ReadLine()
    End Sub

End Module
