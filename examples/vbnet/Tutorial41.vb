'------------------------------------------------------------------------------
' Tutorial 41
'
' This tutorial shows how to convert XML spreadsheet to Excel in VB.NET. The
' XML Spreadsheet generated by Tutorial 32 is imported, some data is modified
' and after that is exported as Excel file.
'------------------------------------------------------------------------------

Imports EasyXLS
Imports System.IO

Module Tutorial41

    Sub Main()


        Console.WriteLine("Tutorial 41" & vbCrLf & "----------" & vbCrLf)

        ' Create an instance of the class used to import/export Excel files
        Dim workbook As New ExcelDocument

        ' Import XML Spreadsheet file
        Console.WriteLine("Reading file C:\Samples\Tutorial32.xml." & vbCrLf)
        If (workbook.easy_LoadXMLSpreadsheetFile("C:\Samples\Tutorial32.xml")) Then

            ' Get the table of data from the second sheet and add some data in cells (optional step)
            Dim xlsSecondTab As ExcelWorksheet = workbook.easy_getSheetAt(1)
            Dim xlsTable = xlsSecondTab.easy_getExcelTable

            xlsTable.easy_getCell("A1").setValue("Data added by Tutorial41")

            For column As Integer = 0 To 4
                xlsTable.easy_getCell(1, column).setValue("Data " & (column + 1))
            Next

            ' Export Excel file
            Console.WriteLine(vbCrLf & "Writing file C:\Samples\Tutorial41 - convert XML spreadsheet to Excel.xlsx.")
            workbook.easy_WriteXLSXFile("C:\Samples\Tutorial41 - convert XML spreadsheet to Excel.xlsx")

            ' Confirm conversion of XML Spreadsheet to Excel
            Dim sError As String = workbook.easy_getError()
            If (sError.Equals("")) Then
                Console.Write(vbCrLf & "File successfully created.")
            Else
                Console.Write(vbCrLf & "Error encountered: " & sError)
            End If
        Else
            Console.WriteLine(vbCrLf & "Error reading file C:\Samples\Tutorial32.xml " & vbCrLf & workbook.easy_getError())
        End If

        ' Dispose memory
        workbook.Dispose()

        Console.WriteLine(vbCrLf & "Press Enter to Exit...")
        Console.ReadLine()
    End Sub

End Module
