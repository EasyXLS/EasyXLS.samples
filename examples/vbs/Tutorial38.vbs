    '===============================================================================
    ' Tutorial 38
    '
    ' This tutorial shows how to read an Excel XLSB file in VBScript
	' (the XLSB file generated by Tutorial 29 as base template), modify
	' some data and save it to another XLSB file (Tutorial38 - read XLSB file.xlsb).
    '===============================================================================
    
    WScript.StdOut.WriteLine("Tutorial 38" & vbcrlf & "-----------" & vbcrlf)

	' Create an instance of the class that reads Excel files
	Set workbook = CreateObject("EasyXLS.ExcelDocument")
    
    ' Read XLSB file
    WScript.StdOut.WriteLine("Reading file: C:\Samples\Tutorial29.xlsb" & vbcrlf)
    If (workbook.easy_LoadXLSBFile("C:\Samples\Tutorial29.xlsb")) Then
    
		' Get the table of data for the second worksheet
		Set xlsSecondTable = workbook.easy_getSheet("Second tab").easy_getExcelTable()

		' Write some data to the second sheet
		xlsSecondTable.easy_getCell_2("A1").setValue("Data added by Tutorial38")

		For column=0 To 4
			xlsSecondTable.easy_getCell(1, column).setValue("Data " & (column + 1))
		Next
        
        ' Export the new XLSB file
        Wscript.StdOut.WriteLine(vbcrlf & "Writing file: C:\Samples\Tutorial38 - read XLSB file.xlsb")
        workbook.easy_WriteXLSBFile ("C:\Samples\Tutorial38 - read XLSB file.xlsb")
    
		' Confirm export of Excel file
		Dim sError
		sError = workbook.easy_getError()
		If sError = "" Then
		WScript.StdOut.WriteLine(vbcrlf & "File successfully created.")
		Else
			WScript.StdOut.WriteLine(vbcrlf & "Error: " & sError)
		End If    
    Else
        Wscript.StdOut.WriteLine("Error reading file C:\Samples\Tutorial29.xlsb" & vbcrlf & workbook.easy_getError())
    End If
    
	' Dispose memory
	workbook.Dispose
    
    Wscript.StdOut.Write(vbcrlf & "Press Enter to exit ...")
    Wscript.StdIn.ReadLine()
