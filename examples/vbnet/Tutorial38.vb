'-------------------------------------------------------------------------------
' Tutorial 38
'
' This tutorial shows how to read an Excel XLSB file in VB.NET (the
' XLSB file generated by Tutorial 29 as base template), modify
' some data and save it to another XLSB file (Tutorial38 - read XLSB file.xlsb).
'-------------------------------------------------------------------------------

Imports EasyXLS
Imports System.IO

Module Tutorial38

    Sub Main()


        Console.WriteLine("Tutorial 38" & vbCrLf & "----------" & vbCrLf)

        ' Create an instance of the class that reads Excel files
        Dim workbook As New ExcelDocument

        ' Read XLSB file
        Console.WriteLine("Reading file C:\Samples\Tutorial29.xlsb." & vbCrLf)
        If (workbook.easy_LoadXLSBFile("C:\Samples\Tutorial29.xlsb")) Then

            ' Get the table of data for the second worksheet
            Dim xlsSecondTab As ExcelWorksheet = workbook.easy_getSheet("Second tab")
            Dim xlsSecondTable = xlsSecondTab.easy_getExcelTable

            ' Write some data to the second sheet
            xlsSecondTable.easy_getCell("A1").setValue("Data added by Tutorial38")

            For column As Integer = 0 To 4
                xlsSecondTable.easy_getCell(1, column).setValue("Data " & (column + 1))
            Next

            ' Export the new XLSB file
            Console.WriteLine(vbCrLf & "Writing file C:\Samples\Tutorial38 - read XLSB file.xlsb.")
            workbook.easy_WriteXLSBFile("C:\Samples\Tutorial38 - read XLSB file.xlsb")

            ' Confirm export of Excel file
            Dim sError As String = workbook.easy_getError()
            If (sError.Equals("")) Then
                Console.Write(vbCrLf & "File successfully created.")
            Else
                Console.Write(vbCrLf & "Error encountered: " & sError)
            End If
        Else
            Console.WriteLine(vbCrLf & "Error reading file C:\Samples\Tutorial29.xlsb " & vbCrLf & workbook.easy_getError())
        End If

        ' Dispose memory
        workbook.Dispose()

        Console.WriteLine(vbCrLf & "Press Enter to Exit...")
        Console.ReadLine()
    End Sub

End Module
